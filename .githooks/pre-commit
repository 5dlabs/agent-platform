#!/bin/bash
# Pre-commit hook for code quality

# ANSI color codes
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo "üîç Running pre-commit checks..."

# Check for large files (>1MB)
LARGE_FILES=$(git diff --cached --name-only | xargs -I {} sh -c 'test -f "{}" && stat -f%z "{}" 2>/dev/null || stat -c%s "{}" 2>/dev/null' | awk '$1 > 1048576 {print}' | wc -l)
if [ "$LARGE_FILES" -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Large files detected (>1MB)${NC}"
    git diff --cached --name-only | xargs -I {} sh -c 'test -f "{}" && echo "{}: $(du -h "{}" | cut -f1)"'
fi

# Remind about GitHub Secret Scanning
echo -e "${GREEN}‚úÖ GitHub Secret Scanning is enabled for this repository${NC}"
echo "   Secrets will be automatically detected after push"

# Check for common issues
ISSUES=0

# Check for trailing whitespace
if git diff --cached --check; then
    :
else
    echo -e "${YELLOW}‚ö†Ô∏è  Trailing whitespace detected${NC}"
    ISSUES=1
fi

# Check for merge conflict markers
if git diff --cached --name-only | xargs grep -l "^<<<<<<< \|^======= \|^>>>>>>> " 2>/dev/null; then
    echo -e "${RED}‚ùå Merge conflict markers found${NC}"
    ISSUES=1
fi

if [ $ISSUES -eq 0 ]; then
    echo -e "${GREEN}‚úÖ All checks passed${NC}"
else
    echo -e "${YELLOW}Consider fixing the issues above before committing${NC}"
fi

exit 0