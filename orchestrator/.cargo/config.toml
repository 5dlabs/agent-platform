# Optimized Cargo configuration for fast builds
# This config is tuned for development speed

[build]
# Use all available CPU cores
jobs = 0

# Target configuration for fast linking
[target.x86_64-unknown-linux-gnu]
linker = "/usr/bin/clang-15"
rustflags = [
    "-C", "link-arg=--ld-path=/usr/local/bin/mold",
    "-C", "target-cpu=native",  # Optimize for the build machine
]

# Development profile optimizations
[profile.dev]
# Disable debug info for faster builds
debug = 0
# Strip debug info during linking
strip = "debuginfo"
# Enable incremental compilation
incremental = true
# Faster compilation for dev builds
opt-level = 0

# Optimize dependencies but not our code
[profile.dev.package."*"]
opt-level = 3
debug = 2

# Optimize build scripts and proc macros
[profile.dev.build-override]
opt-level = 3

# Release profile with LTO for production
[profile.release]
lto = "thin"
opt-level = 3
codegen-units = 1
panic = "abort"

# Network optimizations
[net]
git-fetch-with-cli = true
retry = 3

# Registry optimizations
[registries.crates-io]
protocol = "sparse"

# Cargo behavior
[cargo-new]
vcs = "none"

# Source replacement for faster dependency resolution
[source.crates-io]
replace-with = "vendored-sources"

[source.vendored-sources]
directory = "vendor"

# Unstable features for faster builds (nightly only)
[unstable]
# Enable binary dependency depinfo
binary-dep-depinfo = true
# Enable build-std for smaller binaries
build-std = false  # Disabled for compatibility