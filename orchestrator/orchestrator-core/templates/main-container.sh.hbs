#!/bin/sh
set -e

echo '════════════════════════════════════════════════════════════════'
echo '║                    CLAUDE AGENT STARTING                     ║'
echo '════════════════════════════════════════════════════════════════'

=== WORKSPACE VALIDATION ===
echo "Claude working directory: {{working_dir}}"
echo "Checking for required files..."

# Check for essential files
REQUIRED_FILES="CLAUDE.md task.md design-spec.md prompt.md acceptance-criteria.md .claude/settings.local.json"
MISSING_FILES=""

for file in $REQUIRED_FILES; do
    if [ -f "$file" ]; then
        echo "✓ Found: $file"
    else
        echo "✗ Missing: $file"
        MISSING_FILES="$MISSING_FILES $file"
    fi
done

# For implementation tasks, create prompt.md from CLAUDE.md if missing
if [ ! -f "prompt.md" ] && [ -f "CLAUDE.md" ]; then
    echo "Creating prompt.md from CLAUDE.md"
    cp CLAUDE.md prompt.md
    echo "✓ Created prompt.md from CLAUDE.md"
fi

# Check for git repository
if [ -d ".git" ]; then
    echo "✓ Found: git repository"
else
    echo "✗ Missing: git repository"
    MISSING_FILES="$MISSING_FILES .git"
fi

if [ -n "$MISSING_FILES" ]; then
    echo "✗ ERROR: Missing required files or directories:$MISSING_FILES"
    echo "Cannot proceed with task execution."
    exit 1
fi

echo "✓ All required files present. Workspace is valid."

=== MARKDOWN FILES PROVIDED ===
echo "The following documentation files are available to Claude:"
echo ""
for file in *.md; do
    if [ -f "$file" ]; then
        size=$(wc -c < "$file")
        echo "📄 $file ($size bytes)"
    fi
done

=== STARTING CLAUDE ===

# Build Claude command with print mode, streaming output
CLAUDE_CMD="{{command}} -p --output-format stream-json --verbose"

{{#if is_retry}}
CLAUDE_CMD="$CLAUDE_CMD --continue"
echo 'Adding --continue flag for attempt {{attempts}}'
{{/if}}

# Use stdin to pass the prompt content
echo "Final Claude command: $CLAUDE_CMD (with prompt from stdin)"

# Execute Claude with the prompt content
if [ -f "prompt.md" ]; then
    $CLAUDE_CMD < prompt.md
else
    echo "ERROR: prompt.md not found for Claude execution"
    exit 1
fi

echo '════════════════════════════════════════════════════════════════'
echo '║                    CLAUDE AGENT COMPLETE                     ║'
echo '════════════════════════════════════════════════════════════════'