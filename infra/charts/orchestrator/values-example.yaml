# Example values for orchestrator.
# Copy this file and modify as needed for your environment.

# Container image configuration
image:
  repository: ghcr.io/5dlabs/platform/orchestrator
  pullPolicy: Always
  tag: "latest"  # Use specific version in production

# Required secrets - MUST be provided
secrets:
  # Get your Anthropic API key from: https://console.anthropic.com/
  anthropicApiKey: "sk-ant-api03-your-key-here"
  # Create a GitHub personal access token with repo permissions
  githubToken: "ghp_your-token-here"

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8080

# Ingress configuration for external access
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"  # For TLS
  hosts:
    - host: orchestrator.local  # Change to your domain
      paths:
        - path: /
          pathType: Prefix
  tls: []
  # tls:
  #   - secretName: orchestrator-tls
  #     hosts:
  #       - orchestrator.yourdomain.com

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Orchestrator configuration
config:
  # Kubernetes namespace where Claude Code jobs will be deployed
  kubernetesNamespace: "orchestrator"

  # Helm configuration
  helmChartPath: "/infra/claude-code"
  helmNamespace: "orchestrator"
  helmTimeout: "600s"

  # Server configuration
  serverHost: "0.0.0.0"
  serverPort: "8080"

  # Logging level
  rustLog: "orchestrator=debug,tower_http=debug,axum=debug"

# RBAC configuration
rbac:
  create: true
  # Use namespaced Role instead of ClusterRole for better security
  namespaced: true

# Claude Code Helm chart embedding
claudeCodeChart:
  enabled: true
  mountPath: "/infra"

# Health check configuration
healthCheck:
  enabled: true
  path: "/health"
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 60
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 30

# Shared workspace PVC (optional - can be created separately)
sharedWorkspace:
  enabled: false  # Set to true to create PVC with this chart
  name: "shared-workspace-pvc"
  storageClass: "local-path"
  accessMode: "ReadWriteOnce"
  size: "50Gi"

# Node affinity and tolerations
nodeSelector: {}

tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

affinity: {}

# Autoscaling (disabled by default for single replica)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80