apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: taskruns.orchestrator.io
spec:
  group: orchestrator.io
  scope: Namespaced
  names:
    plural: taskruns
    singular: taskrun
    kind: TaskRun
    shortNames:
    - tr
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}  # Enable status subresource for proper Kubernetes patterns
    schema:
      openAPIV3Schema:
        type: object
        required: ["spec"]
        properties:
          spec:
            type: object
            required: ["taskId", "serviceName", "agentName", "contextVersion", "markdownFiles"]
            properties:
              taskId:
                type: integer
                minimum: 1
                description: "Unique identifier for the task"
              serviceName:
                type: string
                minLength: 1
                description: "Target service for the task"
              agentName:
                type: string
                minLength: 1
                description: "Agent to execute the task"
              contextVersion:
                type: integer
                minimum: 1
                default: 1
                description: "Version of the context, incremented on updates"
              markdownFiles:
                type: array
                minItems: 1
                description: "Markdown files containing task context"
                items:
                  type: object
                  required: ["filename", "content"]
                  properties:
                    filename:
                      type: string
                      minLength: 1
                      pattern: "^[a-zA-Z0-9._-]+\\.md$"
                      description: "Filename for the markdown content"
                    content:
                      type: string
                      minLength: 1
                      description: "Markdown content"
                    fileType:
                      type: string
                      enum: ["task", "design-spec", "prompt", "context", "acceptance-criteria"]
                      description: "Type of markdown file"
              agentTools:
                type: array
                description: "Tools available to the agent"
                items:
                  type: object
                  required: ["name", "enabled"]
                  properties:
                    name:
                      type: string
                      minLength: 1
                      description: "Tool name (e.g., bash, edit, read)"
                    enabled:
                      type: boolean
                      default: true
                      description: "Whether the tool is enabled"
                    config:
                      type: object
                      description: "Tool-specific configuration"
                    restrictions:
                      type: array
                      description: "Tool restrictions or limitations"
                      items:
                        type: string
              repository:
                type: object
                description: "Repository information for code access"
                required: ["url", "branch"]
                properties:
                  url:
                    type: string
                    minLength: 1
                    description: "Repository URL (HTTPS or SSH)"
                  branch:
                    type: string
                    minLength: 1
                    default: "main"
                    description: "Branch or tag to checkout"
                  path:
                    type: string
                    description: "Subdirectory path within the repository"
                  auth:
                    type: object
                    description: "Authentication configuration"
                    required: ["type", "secretName", "secretKey"]
                    properties:
                      type:
                        type: string
                        enum: ["Token", "SshKey", "BasicAuth"]
                        description: "Type of authentication"
                      secretName:
                        type: string
                        minLength: 1
                        description: "Name of the Kubernetes secret"
                      secretKey:
                        type: string
                        minLength: 1
                        default: "token"
                        description: "Key within the secret"
          status:
            type: object
            properties:
              phase:
                type: string
                enum: ["Pending", "Running", "Succeeded", "Failed"]
                description: "Current phase of the TaskRun"
              jobName:
                type: string
                description: "Name of the Kubernetes Job created for this task"
              configMapName:
                type: string
                description: "Name of the ConfigMap containing task files"
              attempts:
                type: integer
                minimum: 0
                default: 0
                description: "Number of execution attempts"
              lastUpdated:
                type: string
                format: date-time
                description: "Last time the status was updated"
              message:
                type: string
                description: "Human-readable message about the current status"
              conditions:
                type: array
                description: "Detailed conditions for the TaskRun"
                items:
                  type: object
                  required: ["type", "status"]
                  properties:
                    type:
                      type: string
                      description: "Type of condition"
                    status:
                      type: string
                      enum: ["True", "False", "Unknown"]
                      description: "Status of the condition"
                    lastTransitionTime:
                      type: string
                      format: date-time
                      description: "Last time the condition transitioned"
                    reason:
                      type: string
                      description: "Reason for the condition's last transition"
                    message:
                      type: string
                      description: "Human-readable message about the condition"
    additionalPrinterColumns:
    - name: Task
      type: integer
      jsonPath: .spec.taskId
    - name: Service
      type: string
      jsonPath: .spec.serviceName
    - name: Version
      type: integer
      jsonPath: .spec.contextVersion
    - name: Phase
      type: string
      jsonPath: .status.phase
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp