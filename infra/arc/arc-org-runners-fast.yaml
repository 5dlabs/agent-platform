---
# Simple fast runners based on working agent-platform config
# Just adds optimized labels and enhanced resources

# Persistent Volume Claims for caching
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cargo-cache-pvc
  namespace: arc-systems-optimized
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sccache-cache-pvc
  namespace: arc-systems-optimized
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rustup-cache-pvc
  namespace: arc-systems-optimized
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-path
---
apiVersion: actions.summerwind.dev/v1alpha1
kind: RunnerDeployment
metadata:
  name: org-runners-fast
  namespace: arc-systems-optimized
spec:
  replicas: 2
  template:
    spec:
      # Repository-specific like the working agent-platform runners
      repository: 5dlabs/agent-platform

      # GitHub authentication
      githubAPICredentialsFrom:
        secretRef:
          name: arc-github-token

      # Enhanced labels for identification
      labels:
        - self-hosted
        - linux
        - x64
        - k8s-runner
        - rust-fast
        - enhanced

      # Enhanced resources (more than standard)
      resources:
        limits:
          cpu: "4"
          memory: "8Gi"
        requests:
          cpu: "1"
          memory: "2Gi"

      # Custom Rust builder image with mold and optimizations pre-installed
      image: ghcr.io/5dlabs/agent-platform/rust-builder:feature-example-project-and-cli
      dockerEnabled: true
      dockerdWithinRunnerContainer: true

      # Environment with cache optimizations
      env:
        - name: RUNNER_FEATURE_FLAG_EPHEMERAL
          value: "true"
        - name: PATH
          value: "/shared:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        - name: CARGO_HOME
          value: "/cache/cargo"
        - name: SCCACHE_DIR
          value: "/cache/sccache"
        - name: RUSTUP_HOME
          value: "/cache/rustup"

      # Service account
      serviceAccountName: github-runner-optimized

      # Optimized init container for tools
      initContainers:
        - name: install-tools
          image: alpine:3.19
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: true
          command: ["sh", "-c"]
          args:
            - |
              echo "Installing tools and optimizations..."
              apk add --no-cache wget tar curl build-base

              echo "Installing kubectl..."
              wget -q -O /shared/kubectl https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl
              chmod +x /shared/kubectl

              echo "Installing helm..."
              wget -q -O /tmp/helm.tar.gz https://get.helm.sh/helm-v3.14.0-linux-amd64.tar.gz
              tar -xzf /tmp/helm.tar.gz -C /tmp
              mv /tmp/linux-amd64/helm /shared/helm
              chmod +x /shared/helm

              # Create cache directories with proper permissions
              echo "Setting up cache directories..."
              mkdir -p /cache/cargo /cache/sccache /cache/rustup

              # Set ownership to runner user (1000:1000)
              chown -R 1000:1000 /cache || echo "Warning: Could not set cache ownership"
              chmod -R 755 /cache || echo "Warning: Could not set cache permissions"

              echo "Tools installed successfully"
              ls -la /shared/
          volumeMounts:
            - name: shared-tools
              mountPath: /shared
            - name: cargo-cache
              mountPath: /cache/cargo
            - name: sccache-cache
              mountPath: /cache/sccache
            - name: rustup-cache
              mountPath: /cache/rustup

      # Persistent volumes for caching
      volumes:
        - name: shared-tools
          emptyDir: {}
        - name: cargo-cache
          persistentVolumeClaim:
            claimName: cargo-cache-pvc
        - name: sccache-cache
          persistentVolumeClaim:
            claimName: sccache-cache-pvc
        - name: rustup-cache
          persistentVolumeClaim:
            claimName: rustup-cache-pvc

      volumeMounts:
        - name: shared-tools
          mountPath: /shared
        - name: cargo-cache
          mountPath: /cache/cargo
        - name: sccache-cache
          mountPath: /cache/sccache
        - name: rustup-cache
          mountPath: /cache/rustup

      # Security context
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000