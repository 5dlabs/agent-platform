---
# Arc runners using pre-warmed rust-builder image for ultra-fast builds
# Uses the rust-builder image with all dependencies pre-compiled

apiVersion: v1
kind: Namespace
metadata:
  name: arc-systems-rust-builder
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/audit: privileged
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-runner-rust-builder
  namespace: arc-systems-rust-builder
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-runner-deploy-rust-builder
rules:
  - apiGroups: [""]
    resources: ["namespaces", "services", "secrets", "configmaps", "persistentvolumeclaims"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods", "pods/log", "nodes"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["orchestrator.io"]
    resources: ["taskruns"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["helm.sh"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-runner-deploy-rust-builder
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-runner-deploy-rust-builder
subjects:
  - kind: ServiceAccount
    name: github-runner-rust-builder
    namespace: arc-systems-rust-builder
---
# Arc runners with pre-warmed rust-builder image
apiVersion: actions.summerwind.dev/v1alpha1
kind: RunnerDeployment
metadata:
  name: org-runners-rust-builder
  namespace: arc-systems-rust-builder
spec:
  replicas: 4
  template:
    spec:
      organization: 5dlabs
      githubAPICredentialsFrom:
        secretRef:
          name: arc-github-token

      labels:
        - self-hosted
        - linux
        - x64
        - k8s-runner
        - rust-builder
        - pre-warmed

      # Enhanced resources
      resources:
        limits:
          cpu: "8"
          memory: "16Gi"
        requests:
          cpu: "2"
          memory: "4Gi"

      # Use our pre-warmed rust-builder image
      image: ghcr.io/5dlabs/agent-platform/rust-builder:latest
      dockerEnabled: true
      dockerdWithinRunnerContainer: true

      env:
        - name: RUNNER_FEATURE_FLAG_EPHEMERAL
          value: "true"
        # Pre-configured in image
        - name: CARGO_HOME
          value: "/home/runner/.cargo"
        - name: RUSTUP_HOME
          value: "/home/runner/.rustup"
        - name: SCCACHE_DIR
          value: "/home/runner/.cache/sccache"
        - name: SCCACHE_CACHE_SIZE
          value: "8G"
        - name: RUSTC_WRAPPER
          value: "sccache"
        # Add runner to PATH
        - name: PATH
          value: "/home/runner/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

      serviceAccountName: github-runner-rust-builder

      # No init containers needed - everything is pre-installed in the image!
      
      # No volume mounts needed - the image has pre-warmed dependencies baked in!
      # This means the dependencies are immediately available without any mounting

      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001